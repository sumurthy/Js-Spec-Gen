{
  "name": "ChartAxis",
  "description": "Represents a single axis in a chart.",
  "isCollection": false,
  "collectionOf": null,
  "restPath": null,
  "info": {
    "version": "1.1",
    "reqSet": "1.1",
    "addinTypes": [
      "Excel"
    ],
    "nameSpace": "Excel",
    "addinHosts": [
      "Task pane"
    ],
    "title": "Office JavaScript Add-in API",
    "description": "Office JavaScript Add-in API"
  },
  "properties": [
    {
      "name": "baseTimeUnit",
      "dataType": "ChartAxisTimeUnit",
      "description": "Returns or sets the base unit for the specified category axis.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.7",
      "isKey": null,
      "notes": null
    },
    {
      "name": "categoryType",
      "dataType": "ChartAxisCategoryType",
      "description": "Returns or sets the category axis type.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.7",
      "isKey": null,
      "notes": null
    },
    {
      "name": "format",
      "dataType": "ChartAxisFormat",
      "description": "Represents the formatting of a chart object, which includes line and font formatting.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "majorGridlines",
      "dataType": "ChartGridlines",
      "description": "Returns a Gridlines object that represents the major gridlines for the specified axis.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "majorUnit",
      "dataType": "object",
      "description": "Represents the interval between two major tick marks. Can be set to a numeric value or an empty string.  The returned value is always a number.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "majorTimeUnitScale",
      "dataType": "ChartAxisTimeUnit",
      "description": "Returns or sets the major unit scale value for the category axis when the CategoryType property is set to TimeScale.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.7",
      "isKey": null,
      "notes": null
    },
    {
      "name": "maximum",
      "dataType": "object",
      "description": "Represents the maximum value on the value axis.  Can be set to a numeric value or an empty string (for automatic axis values).  The returned value is always a number.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "minimum",
      "dataType": "object",
      "description": "Represents the minimum value on the value axis. Can be set to a numeric value or an empty string (for automatic axis values).  The returned value is always a number.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "minorGridlines",
      "dataType": "ChartGridlines",
      "description": "Returns a Gridlines object that represents the minor gridlines for the specified axis.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "minorUnit",
      "dataType": "object",
      "description": "Represents the interval between two minor tick marks. Can be set to a numeric value or an empty string (for automatic axis values). The returned value is always a number.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "minorTimeUnitScale",
      "dataType": "ChartAxisTimeUnit",
      "description": "Returns or sets the minor unit scale value for the category axis when the CategoryType property is set to TimeScale.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.7",
      "isKey": null,
      "notes": null
    },
    {
      "name": "title",
      "dataType": "ChartAxisTitle",
      "description": "Represents the axis title.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "displayUnit",
      "dataType": "string",
      "description": "Represents the axis display unit.",
      "isReadOnly": false,
      "enumNameJs": "Excel.ChartAxisDisplayUnit",
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.7",
      "isKey": null,
      "notes": null
    },
    {
      "name": "showDisplayUnitLabel",
      "dataType": "bool",
      "description": "Represents whether the axis display unit label is visible.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.7",
      "isKey": null,
      "notes": null
    },
    {
      "name": "customDisplayUnit",
      "dataType": "double",
      "description": "Represents the custom axis display unit value. Read-only. To set this property, please use the SetCustomDisplayUnit(double) method.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.7",
      "isKey": null,
      "notes": null
    },
    {
      "name": "type",
      "dataType": "string",
      "description": "Represents the axis type.",
      "isReadOnly": true,
      "enumNameJs": "Excel.ChartAxisType",
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.7",
      "isKey": null,
      "notes": null
    },
    {
      "name": "axisGroup",
      "dataType": "string",
      "description": "Represents the group for the specified axis.",
      "isReadOnly": true,
      "enumNameJs": "Excel.ChartAxisGroup",
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.7",
      "isKey": null,
      "notes": null
    },
    {
      "name": "scaleType",
      "dataType": "string",
      "description": "Represents the value axis scale type.",
      "isReadOnly": false,
      "enumNameJs": "Excel.ChartAxisScaleType",
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.7",
      "isKey": null,
      "notes": null
    },
    {
      "name": "logBase",
      "dataType": "double",
      "description": "Represents the base of the logarithm when using logarithmic scales.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.7",
      "isKey": null,
      "notes": null
    },
    {
      "name": "left",
      "dataType": "double",
      "description": "Represents the distance, in points, from the left edge of the axis to the left of chart area. Null if the axis is not visible.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.7",
      "isKey": null,
      "notes": null
    },
    {
      "name": "top",
      "dataType": "double",
      "description": "Represents the distance, in points, from the top edge of the axis to the top of chart area. Null if the axis is not visible.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.7",
      "isKey": null,
      "notes": null
    },
    {
      "name": "height",
      "dataType": "double",
      "description": "Represents the height, in points, of the chart axis. Null if the axis is not visible.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.7",
      "isKey": null,
      "notes": null
    },
    {
      "name": "width",
      "dataType": "double",
      "description": "Represents the width, in points, of the chart axis. Null if the axis is not visible.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.7",
      "isKey": null,
      "notes": null
    },
    {
      "name": "reversePlotOrder",
      "dataType": "bool",
      "description": "Represents whether Microsoft Excel plots data points from last to first.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.7",
      "isKey": null,
      "notes": null
    },
    {
      "name": "crosses",
      "dataType": "string",
      "description": "Represents the specified axis where the other axis crosses.",
      "isReadOnly": false,
      "enumNameJs": "Excel.ChartAxisPosition",
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.7",
      "isKey": null,
      "notes": null
    },
    {
      "name": "crossesAt",
      "dataType": "double",
      "description": "Represents the specified axis where the other axis crosses at. Read Only. Set to this property should use SetCrossesAt(double) method.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.7",
      "isKey": null,
      "notes": null
    },
    {
      "name": "position",
      "dataType": "string",
      "description": "Represents the specified axis position where the other axis crosses.",
      "isReadOnly": false,
      "enumNameJs": "Excel.ChartAxisPosition",
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.8",
      "isKey": null,
      "notes": null
    },
    {
      "name": "positionAt",
      "dataType": "double",
      "description": "Represents the specified axis position where the other axis crosses at. Read Only. Set to this property should use SetPositionAt(double) method.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.8",
      "isKey": null,
      "notes": null
    },
    {
      "name": "visible",
      "dataType": "bool",
      "description": "A boolean value represents the visibility of the axis.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.7",
      "isKey": null,
      "notes": null
    },
    {
      "name": "isBetweenCategories",
      "dataType": "bool",
      "description": "Represents whether value axis crosses the category axis between categories.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.8",
      "isKey": null,
      "notes": null
    },
    {
      "name": "majorTickMark",
      "dataType": "string",
      "description": "Represents the type of major tick mark for the specified axis.",
      "isReadOnly": false,
      "enumNameJs": "Excel.ChartAxisTickMark",
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.7",
      "isKey": null,
      "notes": null
    },
    {
      "name": "minorTickMark",
      "dataType": "string",
      "description": "Represents the type of minor tick mark for the specified axis.",
      "isReadOnly": false,
      "enumNameJs": "Excel.ChartAxisTickMark",
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.7",
      "isKey": null,
      "notes": null
    },
    {
      "name": "tickMarkSpacing",
      "dataType": "int",
      "description": "Represents the number of categories or series between tick marks.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.7",
      "isKey": null,
      "notes": null
    },
    {
      "name": "tickLabelPosition",
      "dataType": "string",
      "description": "Represents the position of tick-mark labels on the specified axis.",
      "isReadOnly": false,
      "enumNameJs": "Excel.ChartAxisTickLabelPosition",
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.7",
      "isKey": null,
      "notes": null
    },
    {
      "name": "tickLabelSpacing",
      "dataType": "object",
      "description": "Represents the number of categories or series between tick-mark labels. Can be a value from 1 through 31999 or an empty string for automatic setting. The returned value is always a number.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.7",
      "isKey": null,
      "notes": null
    },
    {
      "name": "alignment",
      "dataType": "string",
      "description": "Represents the alignment for the specified axis tick label.",
      "isReadOnly": false,
      "enumNameJs": "Excel.ChartTextHorizontalAlignment",
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.8",
      "isKey": null,
      "notes": null
    },
    {
      "name": "multiLevel",
      "dataType": "bool",
      "description": "Represents whether an axis is multilevel or not.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.8",
      "isKey": null,
      "notes": null
    },
    {
      "name": "numberFormat",
      "dataType": "string",
      "description": "Represents the format code for the axis tick label.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.8",
      "isKey": null,
      "notes": null
    },
    {
      "name": "linkNumberFormat",
      "dataType": "bool",
      "description": "Represents whether the number format is linked to the cells (so that the number format changes in the labels when it changes in the cells).",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "beta",
      "isKey": null,
      "notes": null
    },
    {
      "name": "offset",
      "dataType": "int",
      "description": "Represents the distance between the levels of labels, and the distance between the first level and the axis line. The value should be an integer from 0 to 1000.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.8",
      "isKey": null,
      "notes": null
    },
    {
      "name": "textOrientation",
      "dataType": "object",
      "description": "Represents the text orientation of the axis tick label. The value should be an integer either from -90 to 90, or 180 for vertically-oriented text.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.8",
      "isKey": null,
      "notes": null
    }
  ],
  "methods": [
    {
      "name": "setCategoryNames",
      "returnType": "void",
      "description": "Sets all the category names for the specified axis.",
      "syntax": "chartAxisObject.setCategoryNames(sourceData);",
      "signature": "setCategoryNames(sourceData: Range)",
      "restfulName": "setCategoryNames",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "sourceData",
          "dataType": "Range",
          "isCollection": false,
          "description": "The Range object corresponding to the source data.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.7"
    },
    {
      "name": "setCustomDisplayUnit",
      "returnType": "void",
      "description": "Sets the axis display unit to a custom value.",
      "syntax": "chartAxisObject.setCustomDisplayUnit(value);",
      "signature": "setCustomDisplayUnit(value: double)",
      "restfulName": "setCustomDisplayUnit",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "value",
          "dataType": "double",
          "isCollection": false,
          "description": "Custom value of the display unit.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.7"
    },
    {
      "name": "setCrossesAt",
      "returnType": "void",
      "description": "Set the specified axis where the other axis crosses at.",
      "syntax": "chartAxisObject.setCrossesAt(value);",
      "signature": "setCrossesAt(value: double)",
      "restfulName": "setCrossesAt",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "value",
          "dataType": "double",
          "isCollection": false,
          "description": "Custom value of the crosses at",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.7"
    },
    {
      "name": "setPositionAt",
      "returnType": "void",
      "description": "Set the specified axis position where the other axis crosses at.",
      "syntax": "chartAxisObject.setPositionAt(value);",
      "signature": "setPositionAt(value: double)",
      "restfulName": "setPositionAt",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "value",
          "dataType": "double",
          "isCollection": false,
          "description": "Custom value of the crosses at",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.8"
    }
  ]
}