{
  "name": "ConditionalFormatCollection",
  "description": "Represents a collection of all the conditional formats that are overlap the range.",
  "isCollection": true,
  "collectionOf": "ConditionalFormat",
  "restPath": null,
  "info": {
    "version": "1.1",
    "reqSet": "1.6",
    "addinTypes": [
      "Excel"
    ],
    "nameSpace": "Excel",
    "addinHosts": [
      "Task pane"
    ],
    "title": "Office JavaScript Add-in API",
    "description": "Office JavaScript Add-in API"
  },
  "properties": [
    {
      "name": "items",
      "dataType": "ConditionalFormat[]",
      "description": "A collection of conditionalFormat objects.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": true,
      "isRelationship": false,
      "reqSet": "1.6",
      "isKey": null,
      "notes": null
    }
  ],
  "methods": [
    {
      "name": "getItem",
      "returnType": "ConditionalFormat",
      "description": "Returns a conditional format for the given ID.",
      "syntax": "conditionalFormatCollectionObject.getItem(id);",
      "signature": "getItem(id: string)",
      "restfulName": "Item",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "id",
          "dataType": "string",
          "isCollection": false,
          "description": "The id of the conditional format.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.6"
    },
    {
      "name": "getItemAt",
      "returnType": "ConditionalFormat",
      "description": "Returns a conditional format at the given index.",
      "syntax": "conditionalFormatCollectionObject.getItemAt(index);",
      "signature": "getItemAt(index: number)",
      "restfulName": "ItemAt",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "index",
          "dataType": "number",
          "isCollection": false,
          "description": "Index of the conditional formats to be retrieved.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.6"
    },
    {
      "name": "getCount",
      "returnType": "int",
      "description": "Returns the number of conditional formats in the workbook. Read-only.",
      "syntax": "conditionalFormatCollectionObject.getCount();",
      "signature": "getCount()",
      "restfulName": "Count",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "1.6"
    },
    {
      "name": "clearAll",
      "returnType": "void",
      "description": "Clears all conditional formats active on the current specified range.",
      "syntax": "conditionalFormatCollectionObject.clearAll();",
      "signature": "clearAll()",
      "restfulName": "clearAll",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "1.6"
    },
    {
      "name": "add",
      "returnType": "ConditionalFormat",
      "description": "Adds a new conditional format to the collection at the firsttop priority.",
      "syntax": "conditionalFormatCollectionObject.add(type);",
      "signature": "add(type: string)",
      "restfulName": "add",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "type",
          "dataType": "string",
          "isCollection": false,
          "description": "The type of conditional format being added.",
          "isRequired": true,
          "enumNameJs": "Excel.ConditionalFormatType",
          "notes": null
        }
      ],
      "reqSet": "1.6"
    }
  ]
}