{
  "name": "Table",
  "description": "Represents an Excel table.",
  "isCollection": false,
  "collectionOf": null,
  "restPath": null,
  "info": {
    "version": "1.1",
    "reqSet": "1.1",
    "addinTypes": [
      "Excel"
    ],
    "nameSpace": "Excel",
    "addinHosts": [
      "Task pane"
    ],
    "title": "Office JavaScript Add-in API",
    "description": "Office JavaScript Add-in API"
  },
  "properties": [
    {
      "name": "id",
      "dataType": "string",
      "description": "Returns a value that uniquely identifies the table in a given workbook. The value of the identifier remains the same even when the table is renamed.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "name",
      "dataType": "string",
      "description": "Name of the table.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "showHeaders",
      "dataType": "bool",
      "description": "Indicates whether the header row is visible or not. This value can be set to show or remove the header row.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "showTotals",
      "dataType": "bool",
      "description": "Indicates whether the total row is visible or not. This value can be set to show or remove the total row.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "highlightFirstColumn",
      "dataType": "bool",
      "description": "Indicates whether the first column contains special formatting.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "highlightLastColumn",
      "dataType": "bool",
      "description": "Indicates whether the last column contains special formatting.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "showBandedRows",
      "dataType": "bool",
      "description": "Indicates whether the rows show banded formatting in which odd rows are highlighted differently from even ones to make reading the table easier.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "showBandedColumns",
      "dataType": "bool",
      "description": "Indicates whether the columns show banded formatting in which odd columns are highlighted differently from even ones to make reading the table easier.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "showFilterButton",
      "dataType": "bool",
      "description": "Indicates whether the filter buttons are visible at the top of each column header. Setting this is only allowed if the table contains a header row.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.3",
      "isKey": null,
      "notes": null
    },
    {
      "name": "style",
      "dataType": "string",
      "description": "Constant value that represents the Table style. Possible values are: TableStyleLight1 thru TableStyleLight21, TableStyleMedium1 thru TableStyleMedium28, TableStyleStyleDark1 thru TableStyleStyleDark11. A custom user-defined style present in the workbook can also be specified.",
      "isReadOnly": false,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "columns",
      "dataType": "TableColumnCollection",
      "description": "Represents a collection of all the columns in the table.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": true,
      "isRelationship": true,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "rows",
      "dataType": "TableRowCollection",
      "description": "Represents a collection of all the rows in the table.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": true,
      "isRelationship": true,
      "reqSet": "1.1",
      "isKey": null,
      "notes": null
    },
    {
      "name": "worksheet",
      "dataType": "Worksheet",
      "description": "The worksheet containing the current table.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.2",
      "isKey": null,
      "notes": null
    },
    {
      "name": "sort",
      "dataType": "TableSort",
      "description": "Represents the sorting for the table.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.2",
      "isKey": null,
      "notes": null
    },
    {
      "name": "legacyId",
      "dataType": "string",
      "description": "Returns a numeric id.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "reqSet": "1.8",
      "isKey": null,
      "notes": null
    },
    {
      "name": "autoFilter",
      "dataType": "AutoFilter",
      "description": "Represents the AutoFilter object of the table. Read-Only.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "beta",
      "isKey": null,
      "notes": null
    }
  ],
  "methods": [
    {
      "name": "getRange",
      "returnType": "Range",
      "description": "Gets the range object associated with the entire table.",
      "syntax": "tableObject.getRange();",
      "signature": "getRange()",
      "restfulName": "Range",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "1.1"
    },
    {
      "name": "getHeaderRowRange",
      "returnType": "Range",
      "description": "Gets the range object associated with header row of the table.",
      "syntax": "tableObject.getHeaderRowRange();",
      "signature": "getHeaderRowRange()",
      "restfulName": "HeaderRowRange",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "1.1"
    },
    {
      "name": "getDataBodyRange",
      "returnType": "Range",
      "description": "Gets the range object associated with the data body of the table.",
      "syntax": "tableObject.getDataBodyRange();",
      "signature": "getDataBodyRange()",
      "restfulName": "DataBodyRange",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "1.1"
    },
    {
      "name": "getTotalRowRange",
      "returnType": "Range",
      "description": "Gets the range object associated with totals row of the table.",
      "syntax": "tableObject.getTotalRowRange();",
      "signature": "getTotalRowRange()",
      "restfulName": "TotalRowRange",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "1.1"
    },
    {
      "name": "delete",
      "returnType": "void",
      "description": "Deletes the table.",
      "syntax": "tableObject.delete();",
      "signature": "delete()",
      "restfulName": "delete",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "1.1"
    },
    {
      "name": "convertToRange",
      "returnType": "Range",
      "description": "Converts the table into a normal range of cells. All data is preserved.",
      "syntax": "tableObject.convertToRange();",
      "signature": "convertToRange()",
      "restfulName": "convertToRange",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "1.2"
    },
    {
      "name": "clearFilters",
      "returnType": "void",
      "description": "Clears all the filters currently applied on the table.",
      "syntax": "tableObject.clearFilters();",
      "signature": "clearFilters()",
      "restfulName": "clearFilters",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "1.2"
    },
    {
      "name": "reapplyFilters",
      "returnType": "void",
      "description": "Reapplies all the filters currently on the table.",
      "syntax": "tableObject.reapplyFilters();",
      "signature": "reapplyFilters()",
      "restfulName": "reapplyFilters",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "1.2"
    },
    {
      "name": "clearStyle",
      "returnType": "void",
      "description": "Changes the table to use the default table style.",
      "syntax": "tableObject.clearStyle();",
      "signature": "clearStyle()",
      "restfulName": "clearStyle",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "beta"
    }
  ]
}