{
  "name": "Filter",
  "description": "Manages the filtering of a table's column.",
  "isCollection": false,
  "collectionOf": null,
  "restPath": null,
  "info": {
    "version": "1.1",
    "reqSet": "1.2",
    "addinTypes": [
      "Excel"
    ],
    "nameSpace": "Excel",
    "addinHosts": [
      "Task pane"
    ],
    "title": "Office JavaScript Add-in API",
    "description": "Office JavaScript Add-in API"
  },
  "properties": [
    {
      "name": "criteria",
      "dataType": "FilterCriteria",
      "description": "The currently applied filter on the given column.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "reqSet": "1.2",
      "isKey": null,
      "notes": null
    }
  ],
  "methods": [
    {
      "name": "apply",
      "returnType": "void",
      "description": "Apply the given filter criteria on the given column.",
      "syntax": "filterObject.apply(criteria);",
      "signature": "apply(criteria: FilterCriteria)",
      "restfulName": "apply",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "criteria",
          "dataType": "FilterCriteria",
          "isCollection": false,
          "description": "The criteria to apply.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.2"
    },
    {
      "name": "applyBottomItemsFilter",
      "returnType": "void",
      "description": "Apply a \"Bottom Item\" filter to the column for the given number of elements.",
      "syntax": "filterObject.applyBottomItemsFilter(count);",
      "signature": "applyBottomItemsFilter(count: number)",
      "restfulName": "applyBottomItemsFilter",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "count",
          "dataType": "number",
          "isCollection": false,
          "description": "The number of elements from the bottom to show.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.2"
    },
    {
      "name": "applyBottomPercentFilter",
      "returnType": "void",
      "description": "Apply a \"Bottom Percent\" filter to the column for the given percentage of elements.",
      "syntax": "filterObject.applyBottomPercentFilter(percent);",
      "signature": "applyBottomPercentFilter(percent: number)",
      "restfulName": "applyBottomPercentFilter",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "percent",
          "dataType": "number",
          "isCollection": false,
          "description": "The percentage of elements from the bottom to show.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.2"
    },
    {
      "name": "applyCellColorFilter",
      "returnType": "void",
      "description": "Apply a \"Cell Color\" filter to the column for the given color.",
      "syntax": "filterObject.applyCellColorFilter(color);",
      "signature": "applyCellColorFilter(color: string)",
      "restfulName": "applyCellColorFilter",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "color",
          "dataType": "string",
          "isCollection": false,
          "description": "The background color of the cells to show.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.2"
    },
    {
      "name": "applyDynamicFilter",
      "returnType": "void",
      "description": "Apply a \"Dynamic\" filter to the column.",
      "syntax": "filterObject.applyDynamicFilter(criteria);",
      "signature": "applyDynamicFilter(criteria: string)",
      "restfulName": "applyDynamicFilter",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "criteria",
          "dataType": "string",
          "isCollection": false,
          "description": "The dynamic criteria to apply.",
          "isRequired": true,
          "enumNameJs": "Excel.DynamicFilterCriteria",
          "notes": null
        }
      ],
      "reqSet": "1.2"
    },
    {
      "name": "applyFontColorFilter",
      "returnType": "void",
      "description": "Apply a \"Font Color\" filter to the column for the given color.",
      "syntax": "filterObject.applyFontColorFilter(color);",
      "signature": "applyFontColorFilter(color: string)",
      "restfulName": "applyFontColorFilter",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "color",
          "dataType": "string",
          "isCollection": false,
          "description": "The font color of the cells to show.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.2"
    },
    {
      "name": "applyValuesFilter",
      "returnType": "void",
      "description": "Apply a \"Values\" filter to the column for the given values.",
      "syntax": "filterObject.applyValuesFilter(values);",
      "signature": "applyValuesFilter(values: object[])",
      "restfulName": "applyValuesFilter",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "values",
          "dataType": "object[]",
          "isCollection": true,
          "description": "The list of values to show.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.2"
    },
    {
      "name": "applyTopItemsFilter",
      "returnType": "void",
      "description": "Apply a \"Top Item\" filter to the column for the given number of elements.",
      "syntax": "filterObject.applyTopItemsFilter(count);",
      "signature": "applyTopItemsFilter(count: number)",
      "restfulName": "applyTopItemsFilter",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "count",
          "dataType": "number",
          "isCollection": false,
          "description": "The number of elements from the top to show.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.2"
    },
    {
      "name": "applyTopPercentFilter",
      "returnType": "void",
      "description": "Apply a \"Top Percent\" filter to the column for the given percentage of elements.",
      "syntax": "filterObject.applyTopPercentFilter(percent);",
      "signature": "applyTopPercentFilter(percent: number)",
      "restfulName": "applyTopPercentFilter",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "percent",
          "dataType": "number",
          "isCollection": false,
          "description": "The percentage of elements from the top to show.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.2"
    },
    {
      "name": "applyIconFilter",
      "returnType": "void",
      "description": "Apply a \"Icon\" filter to the column for the given icon.",
      "syntax": "filterObject.applyIconFilter(icon);",
      "signature": "applyIconFilter(icon: Icon)",
      "restfulName": "applyIconFilter",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "icon",
          "dataType": "Icon",
          "isCollection": false,
          "description": "The icons of the cells to show.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        }
      ],
      "reqSet": "1.2"
    },
    {
      "name": "applyCustomFilter",
      "returnType": "void",
      "description": "Apply a \"Icon\" filter to the column for the given criteria strings.",
      "syntax": "filterObject.applyCustomFilter(criteria1, criteria2, oper);",
      "signature": "applyCustomFilter(criteria1: string, criteria2: string, oper: string)",
      "restfulName": "applyCustomFilter",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "criteria1",
          "dataType": "string",
          "isCollection": false,
          "description": "The first criteria string.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "criteria2",
          "dataType": "string",
          "isCollection": false,
          "description": "The second criteria string.",
          "isRequired": false,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "oper",
          "dataType": "string",
          "isCollection": false,
          "description": "The operator that describes how the two criteria are joined.",
          "isRequired": false,
          "enumNameJs": "Excel.FilterOperator",
          "notes": null
        }
      ],
      "reqSet": "1.2"
    },
    {
      "name": "clear",
      "returnType": "void",
      "description": "Clear the filter on the given column.",
      "syntax": "filterObject.clear();",
      "signature": "clear()",
      "restfulName": "clear",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null,
      "reqSet": "1.2"
    }
  ]
}